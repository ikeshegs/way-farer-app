swagger: '2.0'
info:
  version: '1.0'
  title: Way Farer App
  description: This is a documentation for Way Farer App
  contact: {}
host: my-way-farer-app.herokuapp.com
basePath: /
schemes:
- https
consumes:
- application/json
produces:
- application/json
paths:
  /auth/signup:
    post:
      description: This endpoint authenticates a user, when they create an account and returns a JWT Token
      summary: It creates a new user account
      tags:
      - Users
      operationId: AuthSignupPost
      deprecated: false
      produces:
      - application/json
      consumes:
      - application/x-www-form-urlencoded
      parameters:
      - name: first_name
        in: formData
        required: true
        type: string
        description: ''
      - name: last_name
        in: formData
        required: true
        type: string
        description: ''
      - name: email
        in: formData
        required: true
        type: string
        description: ''
      - name: password
        in: formData
        required: true
        type: string
        description: ''
      responses:
        201:
          description: 'User created successfully'
          headers: {}
        400:
          description: 'Error from validation'
          headers: {}
        409:
          description: 'User already exists'
          headers: {}
  /auth/signin:
    post:
      description: This endpoint authenticates the user on login and returns a JWT Token
      summary: It signs in a user 
      tags:
      - Users
      operationId: AuthSigninPost
      deprecated: false
      produces:
      - application/json
      consumes:
      - application/x-www-form-urlencoded
      parameters:
      - name: email
        in: formData
        required: true
        type: string
        description: ''
      - name: password
        in: formData
        required: true
        type: string
        description: ''
      responses:
        200:
          description: 'Signin Successful'
          headers: {}
        404:
          description: 'No user in the database'
          headers: {}
        400:
          description: 'Invalid credentials'
          headers: {}
  /bookings:
    post:
      description: This endpoint creates a new booking, and returns an object in an array
      summary: It creates a new booking
      tags:
      - Bookings
      operationId: BookingsPost
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: trip_id
        in: formData
        required: true
        type: integer
        description: ''
      responses:
        201:
          description: 'Booking created successfully'
          headers: {}
    get:
      description: This endpoint gets all bookings and returns an object in an array
      summary: It displays a users bookings
      tags:
      - Bookings
      operationId: BookingsGet
      deprecated: false
      produces:
      - application/json
      parameters: []
      responses:
        200:
          description: 'All bookings successfully retrieved'
          headers: {}
    delete/bookingId:
      description: This endpoint deletes a booking and returns an object in an array
      summary: A user can delete their booking
      tags:
      - Bookings
      operationId: BookingsDelete
      deprecated: false
      produces:
      - application/json
      parameters: []
      responses:
        200:
          description: 'Trip deleted successfully'
          headers: {}
    patch/bookingId:
      description: This endpoint changes the seat number for a user on a trip
      summary: A user can change their seat number
      tags:
      - Bookings
      operationId: SeatNumberPatch
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: seat_number
        in: formData
        required: true
        type: integer
        description: ''
      responses:
        200:
          description: 'Seat Number changed successfully'
          headers: {}
        409:
          description: 'Seat Number has been taken'
          headers: {}
  /trips:
    post:
      description: This endpoint creates a trip, and returns an object in an array
      summary: Admin can create a trip
      tags:
      - Trips
      operationId: TripPost
      deprecated: false
      produces:
      - application/json
      parameters:
      - name: bus_id
        in: formData
        required: true
        type: string
        description: ''
      - name: origin
        in: formData
        required: true
        type: string
        description: ''
      - name: destination
        in: formData
        required: true
        type: string
        description: ''
      - name: trip_date
        in: formData
        required: true
        type: string
        description: ''
      - name: fare
        in: formData
        required: true
        type: number
        description: ''
      responses:
        200:
          description: 'Trip created successfully'
          headers: {}
        400:
          description: 'Form inputs error'
          headers: {}
    get:
      description: This endpoint gets all trips, and returns an object in an array
      summary: Users can view all trips`
      tags:
      - Trips
      operationId: TripsGet
      deprecated: false
      produces:
      - application/json
      parameters: []
      responses:
        200:
          description: 'All trips retrieved successfully'
          headers: {}
    patch/tripId:
      description: This endpoint cancels a trip, and returns an object in an array
      summary: Admin can cancel a trip
      tags:
      - Trips
      operationId: TripsPatch
      deprecated: false
      produces:
      - application/json
      parameters: []
      responses:
        200:
          description: 'Trip cancelled successfully'
          headers: {}
definitions:
  signUp:
    type: object
    properties:
      first_name:
        type: string
      last_name:
        type: string
      email:
        type: string
      password:
        type: string
    required:
    - first_name
    - last_name
    - email
    - password
  signIn:
    type: object
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
  bookings:
    type: object
    properties:
      trip_id:
        type: integer
        format: int32
    required:
    - trip_id
  trips:
    type: object
    properties:
      bus_id:
        type: string
      manufacturer:
        type: string
      model:
        type: string
      trip_date:
        type: date
      fare`:
        type: integer
        format: int32
    required:
    - bus_id
    - origin
    - destination
    - trip_date
    - fare
tags:
- name: Bookings
  description: All bookings routes are authenticated using JSONWebToken
- name: Users
  description: All users routes are authenticated using JSONWebToken
- name: Trips
  description: All trips routes are authenticated using JSONWebToken
